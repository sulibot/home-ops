---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ceph-csi-cephfs
  namespace: ceph-csi-cephfs
spec:
  chart:
    spec:
      chart: ceph-csi-cephfs
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: ceph-csi
        namespace: flux-system
      version: 3.14.0
  install:
    createNamespace: true
  interval: 1m0s
  values:
    CSIDriver:
      fsGroupPolicy: File
    cephConfConfigMapName: ceph-config
    cephconf: |
      [global]
        auth_cluster_required = cephx
        auth_service_required = cephx
        auth_client_required = cephx

        # ceph-fuse which uses libfuse2 by default has write buffer size of 2KiB
        # adding 'fuse_big_writes = true' option by default to override this limit
        # see https://github.com/ceph/ceph-csi/issues/1928
        fuse_big_writes = true
    commonLabels: {}
    configMapName: ceph-csi-config
    csiConfig: {}
    driverName: cephfs.csi.ceph.com
    encryptionKMSConfig: {}
    externallyManagedConfigmap: false
    extraDeploy: []
    kmsConfigMapName: ceph-csi-encryption-kms-config
    kubeletDir: /var/lib/kubelet
    logLevel: 5
    logSlowOperationInterval: 30s
    nodeplugin:
      affinity: {}
      annotations: {}
      fusemountoptions: ""
      httpMetrics:
        containerPort: 8081
        enabled: true
        service:
          annotations:
            prometheus.io/port: "9080"
            prometheus.io/scrape: "true"
          clusterIP: ""
          enabled: true
          externalIPs: []
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          servicePort: 8080
          type: ClusterIP
      imagePullSecrets: []
      kernelmountoptions: ""
      name: nodeplugin
      nodeSelector: {}
      plugin:
        image:
          pullPolicy: IfNotPresent
          repository: quay.io/cephcsi/cephcsi
          tag: v3.14.0
        resources: {}
      podAnnotations: {}
      podSecurityContext: {}
      priorityClassName: system-node-critical
      profiling:
        enabled: false
      registrar:
        image:
          pullPolicy: IfNotPresent
          repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
          tag: v2.13.0
        resources: {}
      tolerations: []
      updateStrategy: RollingUpdate
    pluginSocketFile: csi.sock
    provisioner:
      affinity: {}
      annotations: {}
      enableHostNetwork: false
      httpMetrics:
        containerPort: 8081
        enabled: true
        service:
          annotations: {}
          clusterIP: ""
          enabled: true
          externalIPs: []
          loadBalancerIP: ""
          loadBalancerSourceRanges: []
          servicePort: 8080
          type: ClusterIP
      imagePullSecrets: []
      name: provisioner
      nodeSelector: {}
      podAnnotations: {}
      podSecurityContext: {}
      priorityClassName: system-cluster-critical
      profiling:
        enabled: false
      provisioner:
        args: null
        extraArgs: []
        image:
          pullPolicy: IfNotPresent
          repository: registry.k8s.io/sig-storage/csi-provisioner
          tag: v5.1.0
        resources: {}
      replicaCount: 3
      resizer:
        args: null
        enabled: true
        extraArgs: []
        image:
          pullPolicy: IfNotPresent
          repository: registry.k8s.io/sig-storage/csi-resizer
          tag: v1.13.1
        name: resizer
        resources: {}
      setmetadata: true
      snapshotter:
        args:
          enableVolumeGroupSnapshots: false
        extraArgs: []
        image:
          pullPolicy: IfNotPresent
          repository: registry.k8s.io/sig-storage/csi-snapshotter
          tag: v8.2.0
        resources: {}
      strategy:
        rollingUpdate:
          maxUnavailable: 50%
        type: RollingUpdate
      timeout: 60s
      tolerations: []
    provisionerSocketFile: csi-provisioner.sock
    rbac:
      create: true
      leastPrivileges: true
    secret:
      annotations: {}
      create: false
      name: csi-cephfs-secret
      userID: admin
      userKey: <Ceph auth key corresponding to the userID above>
    selinuxMount: true
    serviceAccounts:
      nodeplugin:
        create: true
        name: null
      provisioner:
        create: true
        name: null
    sidecarLogLevel: 1
