- hosts: pvenodes
  tasks:

  - name: install sudo package
    apt:
      name: sudo
      update_cache: yes
      cache_valid_time: 3600
      state: latest

  - name: create Ansible user
    user:
      name: ansible
      shell: '/bin/bash'

  - name: add Ansible ssh key
    authorized_key:
      user: ansible
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIILVrE2qK3isO+A4wU4J+3AJUPa51OtvoAmH22kmAW6Y ansible@sulibot.com"

  - name: add ansible to sudoers
    copy:
      src: sudoer_ansible
      dest: /etc/sudoers.d/ansible
      owner: root
      group: root
      mode: 0440

- name: Ensure /etc/hosts entries for approved pve nodes
  hosts: all
  become: true
  vars:
    approved_pve_entries:
      - "10.10.1.1    pve-v4-01.sulibot.com     pve-v4-01"
      - "10.10.1.2    pve-v4-02.sulibot.com     pve-v4-02"
      - "10.10.1.3    pve-v4-03.sulibot.com     pve-v4-03"
      - "10.10.1.4    pve04.sulibot.com         pve04"
      - "fd00::1:1     pve01.sulibot.com         pve01"
      - "fd00::1:2     pve02.sulibot.com         pve02"
      - "fd00::1:3     pve03.sulibot.com         pve03"
      - "fd00::1:4     pve04.sulibot.com         pve04"
      - "fc00::1:1     pve-cluster01.sulibot.com pve-cluster01"
      - "fc00::1:2     pve-cluster02.sulibot.com pve-cluster02"
      - "fc00::1:3     pve-cluster03.sulibot.com pve-cluster03"

  tasks:
    - name: Add approved pve entries to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      loop: "{{ approved_pve_entries }}"

- name: Deploy IPv6 filtering script on Proxmox hosts
  hosts: all
  become: true
  tasks:
    - name: Copy ipv6_filter.sh script to each host
      copy:
        src: files/ipv6_filter.sh  # Adjust path based on your new 'files' directory
        dest: /etc/network/ipv6_filter.sh
        mode: '0755'

    - name: Ensure indented post-up command in /etc/network/interfaces for vmbr0
      lineinfile:
        path: /etc/network/interfaces
        regexp: '^\s+post-up /etc/network/ipv6_filter.sh'
        line: '        post-up /etc/network/ipv6_filter.sh'
        insertafter: '^iface vmbr0 inet6 static'
        state: present

    - name: Reload networking service to apply changes
      service:
        name: networking
        state: reloaded
      when: ansible_service_mgr == "systemd"

    - name: Restart networking service on non-systemd systems
      command: /etc/init.d/networking restart
      when: ansible_service_mgr != "systemd"
