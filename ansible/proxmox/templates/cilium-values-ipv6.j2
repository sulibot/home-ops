---
# Use the in-cluster kubeconfig to communicate with Kubernetes
kubeConfigPath: ""

# Set the Kubernetes API server address and port
k8sServiceHost: fd00:101::ac
k8sServicePort: 6443

# Enable eBPF-based kube-proxy replacement
kubeProxyReplacement: "true"

# Use native routing (no encapsulation/tunneling) for pod-to-pod traffic
routingMode: "native"

ipv6NativeRoutingCIDR: "fd00:101:244::/56"

# Enable automatic installation of node-to-node pod CIDR routes
autoDirectNodeRoutes: true

# Configure the IP protocol stack to be IPv6-only
ipv4:
  enabled: false
ipv6:
  enabled: true

# Configure masquerading behavior for outbound traffic
enableIPv4Masquerade: false
enableIPv6Masquerade: true
enableMasqueradeRouteSource: false

# Use Cilium's cluster-pool IPAM mode and define the IPv6 pod CIDR range
ipam:
  mode: "cluster-pool"
  operator:
    clusterPoolIPv6PodCIDRList:
      - "fd00:101:244::/56"
    clusterPoolIPv6MaskSize: 64

# Define the Kubernetes service IP range (must match kube-apiserver)
cluster:
  serviceCIDR: "fd00:101:96::/108"

# Configure how the Cilium agent determines its node IP address
node:
  ipAutoDetectionMethod: "can-reach=fd00:101::1"

# Enable BGP control plane (for advertising pod and service IPs)
bgpControlPlane:
  enabled: true

# Enable the eBPF-based masquerade engine
bpf:
  masquerade: true

# Enable Hubble observability features
hubble:
  enabled: true
  relay:
    enabled: true
  ui:
    enabled: true

# Enable Gateway API support for Kubernetes ingress and routing
gatewayAPI:
  enabled: true
  enableProxyProtocol: false
  enableAppProtocol: false
  enableAlpn: false
  xffNumTrustedHops: 0
  externalTrafficPolicy: Cluster
  gatewayClass:
    create: auto
  secretsNamespace:
    create: true
    name: cilium-secrets
    sync: true
  hostNetwork:
    enabled: false
  nodes:
    matchLabels: {}

# Enable Layer 2 neighbor discovery for discovering node addresses
l2NeighDiscovery:
  enabled: true
  refreshPeriod: "30s"

# Enable Layer 7 proxying (required for some Gateway API and network policies)
l7Proxy: true

# Enable built-in Grafana dashboards
dashboards:
  enabled: true
  label: grafana_dashboard
  namespace: ~
  labelValue: "1"
  annotations: {}

# Enable the built-in ingress controller
ingressController:
  enabled: true
  default: false
  loadbalancerMode: dedicated
  enforceHttps: true
  enableProxyProtocol: false
  ingressLBAnnotationPrefixes:
    - lbipam.cilium.io
    - nodeipam.cilium.io
    - service.beta.kubernetes.io
    - service.kubernetes.io
    - cloud.google.com

# Disable Layer 2 broadcast-based VIP advertisements (use BGP instead)
l2announcements:
  enabled: false

# Enable metrics collection for Cilium and its operator
prometheus:
  enabled: true
operator:
  prometheus:
    enabled: true
