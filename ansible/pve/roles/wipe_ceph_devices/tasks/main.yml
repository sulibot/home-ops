---
# roles/wipe_ceph_devices/tasks/main.yml

- name: Gather all Ceph OSD mappings from host_vars
  set_fact:
    osd_list: "{{ pve_ceph_osd_map | dict2items }}"

- name: Derive base block devices correctly for NVMe and SATA drives
  set_fact:
    osds_by_drive: >-
      {{
        dict(
          osd_list
          | map(attribute='value')
          | groupby("^(.*?)(?:p?\\d+)?$", '\\1')
        )
      }}

- name: Debug osds_by_drive
  debug:
    var: osds_by_drive

- name: Generate partition plan for multi-OSD drives
  set_fact:
    partition_plan: >-
      {{
        osds_by_drive
        | dict2items
        | selectattr('value', 'length', '>', 1)
        | map(attribute='key')
        | list
      }}

- name: Debug partition plan
  debug:
    var: partition_plan

- name: Create GPT label on multi-OSD drives
  parted:
    device: "{{ item }}"
    label: gpt
    state: present
  loop: "{{ partition_plan }}"

- name: Create partitions according to plan
  parted:
    device: "{{ item.0 }}"
    number: "{{ item.1 + 1 }}"
    state: present
    part_start: "{{ (item.1 * (100 / (osds_by_drive[item.0]|length))) | int }}%"
    part_end: "{{ ((item.1 + 1) * (100 / (osds_by_drive[item.0]|length))) | int }}%"
  loop: >-
    {{
      partition_plan
      | product(range(0, osds_by_drive[item]|length))
      | list
    }}

- name: Build wipe targets (partitions or raw devices)
  set_fact:
    wipe_targets: >-
      {{
        partition_plan
        | product(range(1, osds_by_drive[item]|length + 1))
        | map('join', '')
        | list
      }}

- name: Fallback to wiping whole devices when no partitions planned
  set_fact:
    wipe_targets: "{{ osds_by_drive.keys() | list }}"
  when: wipe_targets | length == 0

- name: Debug wipe targets before filtering
  debug:
    var: wipe_targets

- name: Exclude mounted or swap devices from wipe list
  set_fact:
    wipe_targets: >-
      {{
        wipe_targets
        | reject('match', item)
        | list
      }}
  loop: "{{ ansible_mounts | map(attribute='device') | list }}"

- name: Debug wipe targets after filtering
  debug:
    var: wipe_targets

- name: Wipe filesystem signatures on each target
  command: wipefs --all --force {{ item }}
  loop: "{{ wipe_targets }}"

- name: Zero out first MiB on each target
  command: dd if=/dev/zero of={{ item }} bs=1M count=1
  loop: "{{ wipe_targets }}"
