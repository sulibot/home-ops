# =============================
# VM FRR TEMPLATE (tenants) â€” advertise loopback service IPs only
# - eBGP to RouterOS border router (on-link via VLAN)
# - EXPORTS ONLY loopback addresses (service IPs)
# - FRR 10.3.x+ with datacenter defaults
# =============================

frr version 10.3
frr defaults datacenter
hostname ${hostname}
log syslog informational
service integrated-vtysh-config
!

! ---------- BFD Configuration ----------
bfd
 profile fast-bfd
  transmit-interval 500
  receive-interval 500
  detect-multiplier 5
  echo-interval 0
 exit
!

! ---------- Loopback Interface (Node ID + VIPs managed by kube-vip) ----------
interface lo
%{ if enable_ipv4 }
 ip address ${egress_ipv4_loopback_id_ip}/32
%{ endif }
%{ if enable_ipv6 }
 ipv6 address ${egress_ipv6_loopback_id_ip}/128
%{ endif }
!

! ---------- BGP Configuration ----------
router bgp ${vm_asn}
 bgp router-id ${router_id}
 bgp log-neighbor-changes
 no bgp default ipv4-unicast
 bgp graceful-restart
 timers bgp 10 30

%{ if enable_ipv4 }
 ! eBGP to RouterOS on-link (VLAN ${cluster_id})
 neighbor ${egress_ipv4_iface_gateway} remote-as ${ros_asn}
 neighbor ${egress_ipv4_iface_gateway} update-source ${egress_ipv4_iface_ip}
 neighbor ${egress_ipv4_iface_gateway} timers connect 5
%{ endif }

%{ if enable_ipv6 }
 ! eBGP to RouterOS on-link (VLAN ${cluster_id})
 neighbor ${egress_ipv6_iface_gateway} remote-as ${ros_asn}
 neighbor ${egress_ipv6_iface_gateway} update-source ${egress_ipv6_iface_ip}
 neighbor ${egress_ipv6_iface_gateway} timers connect 5
%{ endif }

%{ if enable_ipv4 }
 address-family ipv4 unicast
  ! Export ALL loopback IPs (node ID + VIPs when added)
  redistribute connected route-map EXPORT-SERVICES-v4
  ! Import only default route from RouterOS
  neighbor ${egress_ipv4_iface_gateway} activate
  neighbor ${egress_ipv4_iface_gateway} route-map IMPORT-DEFAULT-v4 in
  neighbor ${egress_ipv4_iface_gateway} route-map EXPORT-SERVICES-v4 out
  maximum-paths 8
 exit-address-family
%{ endif }

%{ if enable_ipv6 }
 address-family ipv6 unicast
  ! Export ALL loopback IPs (node ID + VIPs when added)
  redistribute connected route-map EXPORT-SERVICES-v6
  ! Import only default route from RouterOS
  neighbor ${egress_ipv6_iface_gateway} activate
  neighbor ${egress_ipv6_iface_gateway} route-map IMPORT-DEFAULT-v6 in
  neighbor ${egress_ipv6_iface_gateway} route-map EXPORT-SERVICES-v6 out
  maximum-paths 8
 exit-address-family
%{ endif }
!

! ---------- Route Maps & Prefix Lists ----------
%{ if enable_ipv4 }
! Export ALL loopback interfaces (node ID + VIPs dynamically added by kube-vip)
route-map EXPORT-SERVICES-v4 permit 10
 match interface lo
 set community ${vm_asn}:100
!
route-map EXPORT-SERVICES-v4 deny 20
!

! Import only default routes from RouterOS
ip prefix-list DEFAULT-ONLY-v4 seq 10 permit 0.0.0.0/0
!
route-map IMPORT-DEFAULT-v4 permit 10
 match ip address prefix-list DEFAULT-ONLY-v4
!
route-map IMPORT-DEFAULT-v4 deny 20
!
%{ endif }

%{ if enable_ipv6 }
! Export ALL loopback interfaces (node ID + VIPs dynamically added by kube-vip)
route-map EXPORT-SERVICES-v6 permit 10
 match interface lo
 set community ${vm_asn}:100
!
route-map EXPORT-SERVICES-v6 deny 20
!

! Import only default routes from RouterOS
ipv6 prefix-list DEFAULT-ONLY-v6 seq 10 permit ::/0
!
route-map IMPORT-DEFAULT-v6 permit 10
 match ipv6 address prefix-list DEFAULT-ONLY-v6
!
route-map IMPORT-DEFAULT-v6 deny 20
!
%{ endif }

line vty
!