---
kubeConfigPath: ""
k8sServiceHost: fd00:101::10
k8sServicePort: 6443

kubeProxyReplacement: "true"

ipv4:
  enabled: true
ipv6:
  enabled: true

enableIPv4Masquerade: true
enableIPv6Masquerade: true
enableMasqueradeRouteSource: false

bgpControlPlane:
  enabled: true

ipam:
  mode: "cluster-pool"
  operator:
    clusterPoolIPv4PodCIDRList: ["10.244.0.0/16"]
    clusterPoolIPv4MaskSize: 24
    clusterPoolIPv6PodCIDRList: ["fd00:101:244::/56"]
    clusterPoolIPv6MaskSize: 64

bpf:
  masquerade: true

hubble:
  enabled: true
  relay:
    enabled: true
  ui:
    enabled: true

# -- Enable Layer 7 network policy.
l7Proxy: true

gatewayAPI:
  enabled: true
  enableProxyProtocol: false
  enableAppProtocol: false
  enableAlpn: false
  xffNumTrustedHops: 0
  externalTrafficPolicy: Cluster
  gatewayClass:
    create: true
  secretsNamespace:
    create: true
    name: cilium-secrets
    sync: true
  hostNetwork:
    enabled: false
    nodes:
      matchLabels: {}


l2NeighDiscovery:
  enabled: true
  refreshPeriod: "30s"

dashboards:
  enabled: true
  label: grafana_dashboard
  namespace: ~
  labelValue: "1"
  annotations: {}

ingressController:
  enabled: true
  default: false
  loadbalancerMode: dedicated
  enforceHttps: true
  enableProxyProtocol: false
  ingressLBAnnotationPrefixes: ['lbipam.cilium.io', 'nodeipam.cilium.io', 'service.beta.kubernetes.io', 'service.kubernetes.io', 'cloud.google.com']

l2announcements:
  enabled: false

envoy:
  # @schema
  # type: [null, boolean]
  # @schema
  # -- Enable Envoy Proxy in standalone DaemonSet.
  # This field is enabled by default for new installation.
  # @default -- `true` for new installation
  enabled: ~
  # -- (int)
  # Set Envoy'--base-id' to use when allocating shared memory regions.
  # Only needs to be changed if multiple Envoy instances will run on the same node and may have conflicts. Supported values: 0 - 4294967295. Defaults to '0'
  baseID: 0
  log:
    # @schema
    # type: [null, string]
    # @schema
    # -- The format string to use for laying out the log message metadata of Envoy. If specified, Envoy will use text format output.
    # This setting is mutually exclusive with envoy.log.format_json.
    format: "[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"
    # @schema
    # type: [null, object]
    # @schema
    # -- The JSON logging format to use for Envoy. This setting is mutually exclusive with envoy.log.format.
    # ref: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-field-config-bootstrap-v3-bootstrap-applicationlogconfig-logformat-json-format
    format_json: null
    # date: "%Y-%m-%dT%T.%e"
    # thread_id: "%t"
    # source_line: "%s:%#"
    # level: "%l"
    # logger: "%n"
    # message: "%j"
    # -- Path to a separate Envoy log file, if any. Defaults to /dev/stdout.
    path: ""
    # @schema
    # oneOf:
    # - type: [null]
    # - enum: [trace,debug,info,warning,error,critical,off]
    # @schema
    # -- Default log level of Envoy application log that is configured if Cilium debug / verbose logging isn't enabled.
    # This option allows to have a different log level than the Cilium Agent - e.g. lower it to `critical`.
    # Possible values: trace, debug, info, warning, error, critical, off
    # @default -- Defaults to the default log level of the Cilium Agent - `info`
    defaultLevel: ~
    # @schema
    # type: [null, integer]
    # @schema
    # -- Size of the Envoy access log buffer created within the agent in bytes.
    # Tune this value up if you encounter "Envoy: Discarded truncated access log message" errors.
    # Large request/response header sizes (e.g. 16KiB) will require a larger buffer size.
    accessLogBufferSize: 4096
  # -- Time in seconds after which a TCP connection attempt times out
  connectTimeoutSeconds: 2
  # -- Time in seconds after which the initial fetch on an xDS stream is considered timed out
  initialFetchTimeoutSeconds: 30
  # -- Maximum number of concurrent retries on Envoy clusters
  maxConcurrentRetries: 128
  # -- Maximum number of retries for each HTTP request
  httpRetryCount: 3
  # -- ProxyMaxRequestsPerConnection specifies the max_requests_per_connection setting for Envoy
  maxRequestsPerConnection: 0
  # -- Set Envoy HTTP option max_connection_duration seconds. Default 0 (disable)
  maxConnectionDurationSeconds: 0
  # -- Set Envoy upstream HTTP idle connection timeout seconds.
  # Does not apply to connections with pending requests. Default 60s
  idleTimeoutDurationSeconds: 60
  # -- Number of trusted hops regarding the x-forwarded-for and related HTTP headers for the ingress L7 policy enforcement Envoy listeners.
  xffNumTrustedHopsL7PolicyIngress: 0
  # -- Number of trusted hops regarding the x-forwarded-for and related HTTP headers for the egress L7 policy enforcement Envoy listeners.
  xffNumTrustedHopsL7PolicyEgress: 0
  # -- Envoy container image.
  image:
    # @schema
    # type: [null, string]
    # @schema
    override: ~
    repository: "quay.io/cilium/cilium-envoy"
    tag: "v1.31.5-1737535524-fe8efeb16a7d233bffd05af9ea53599340d3f18e"
    pullPolicy: "IfNotPresent"
    digest: "sha256:57a3aa6355a3223da360395e3a109802867ff635cb852aa0afe03ec7bf04e545"
    useDigest: true
  # -- Additional containers added to the cilium Envoy DaemonSet.
  extraContainers: []
  # -- Additional envoy container arguments.
  extraArgs: []
  # -- Additional envoy container environment variables.
  extraEnv: []
  # -- Additional envoy hostPath mounts.
  extraHostPathMounts: []
  # - name: host-mnt-data
  #   mountPath: /host/mnt/data
  #   hostPath: /mnt/data
  #   hostPathType: Directory
  #   readOnly: true
  #   mountPropagation: HostToContainer

  # -- Additional envoy volumes.
  extraVolumes: []
  # -- Additional envoy volumeMounts.
  extraVolumeMounts: []
  # -- Configure termination grace period for cilium-envoy DaemonSet.
  terminationGracePeriodSeconds: 1
  # -- TCP port for the health API.
  healthPort: 9878
  # -- cilium-envoy update strategy
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#updating-a-daemonset
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      # @schema
      # type: [integer, string]
      # @schema
      maxUnavailable: 2
  # -- Roll out cilium envoy pods automatically when configmap is updated.
  rollOutPods: false
  # -- ADVANCED OPTION: Bring your own custom Envoy bootstrap ConfigMap. Provide the name of a ConfigMap with a `bootstrap-config.json` key.
  # When specified, Envoy will use this ConfigMap instead of the default provided by the chart.
  # WARNING: Use of this setting has the potential to prevent cilium-envoy from starting up, and can cause unexpected behavior (e.g. due to
  # syntax error or semantically incorrect configuration). Before submitting an issue, please ensure you have disabled this feature, as support
  # cannot be provided for custom Envoy bootstrap configs.
  # @schema
  # type: [null, string]
  # @schema
  bootstrapConfigMap: ~
  # -- Annotations to be added to all top-level cilium-envoy objects (resources under templates/cilium-envoy)
  annotations: {}
  # -- Security Context for cilium-envoy pods.
  podSecurityContext:
    # -- AppArmorProfile options for the `cilium-agent` and init containers
    appArmorProfile:
      type: "Unconfined"
  # -- Annotations to be added to envoy pods
  podAnnotations: {}
  # -- Labels to be added to envoy pods
  podLabels: {}
  # -- Envoy resource limits & requests
  # ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}
  #   limits:
  #     cpu: 4000m
  #     memory: 4Gi
  #   requests:
  #     cpu: 100m
  #     memory: 512Mi

  startupProbe:
    # -- failure threshold of startup probe.
    # 105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)
    failureThreshold: 105
    # -- interval between checks of the startup probe
    periodSeconds: 2
  livenessProbe:
    # -- failure threshold of liveness probe
    failureThreshold: 10
    # -- interval between checks of the liveness probe
    periodSeconds: 30
  readinessProbe:
    # -- failure threshold of readiness probe
    failureThreshold: 3
    # -- interval between checks of the readiness probe
    periodSeconds: 30
  securityContext:
    # -- User to run the pod with
    # runAsUser: 0
    # -- Run the pod with elevated privileges
    privileged: false
    # -- SELinux options for the `cilium-envoy` container
    seLinuxOptions:
      level: 's0'
      # Running with spc_t since we have removed the privileged mode.
      # Users can change it to a different type as long as they have the
      # type available on the system.
      type: 'spc_t'
    capabilities:
      # -- Capabilities for the `cilium-envoy` container.
      # Even though granted to the container, the cilium-envoy-starter wrapper drops
      # all capabilities after forking the actual Envoy process.
      # `NET_BIND_SERVICE` is the only capability that can be passed to the Envoy process by
      # setting `envoy.securityContext.capabilities.keepNetBindService=true` (in addition to granting the
      # capability to the container).
      # Note: In case of embedded envoy, the capability must  be granted to the cilium-agent container.
      envoy:
        # Used since cilium proxy uses setting IPPROTO_IP/IP_TRANSPARENT
        - NET_ADMIN
        # We need it for now but might not need it for >= 5.11 specially
        # for the 'SYS_RESOURCE'.
        # In >= 5.8 there's already BPF and PERMON capabilities
        - SYS_ADMIN
        # Both PERFMON and BPF requires kernel 5.8, container runtime
        # cri-o >= v1.22.0 or containerd >= v1.5.0.
        # If available, SYS_ADMIN can be removed.
        #- PERFMON
        #- BPF
      # -- Keep capability `NET_BIND_SERVICE` for Envoy process.
      keepCapNetBindService: true
