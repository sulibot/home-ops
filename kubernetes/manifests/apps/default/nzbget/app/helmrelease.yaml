---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nzbget
spec:
  chartRef:
    kind: OCIRepository
    name: nzbget
  interval: 1h
  values:
    controllers:
      nzbget:
        # --- Init container to enable IPv6 binding -------------------------
        initContainers:
          patch-config:
            image:
              repository: busybox
              tag: "1.36"
            command:
              - sh
              - -c
              - |
                echo "[init] Enabling IPv6 binding for NZBGet"
                if [ ! -f /config/nzbget.conf ]; then
                  echo "[init] No nzbget.conf found, creating placeholder"
                  touch /config/nzbget.conf
                fi
                if grep -q '^ControlIP=' /config/nzbget.conf; then
                  sed -i 's/^ControlIP=.*/ControlIP=::/' /config/nzbget.conf
                else
                  echo 'ControlIP=::' >> /config/nzbget.conf
                fi
                for dir in tmp queue nzb ; do
                  mkdir -p "/downloads/${dir}"
                done
                touch /downloads/nzbget.log
                chown -R 1000:1000 /config /downloads
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              allowPrivilegeEscalation: false

        # --- Main NZBGet container ----------------------------------------
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/nzbget
              tag: 25.4.0@sha256:7afaa93e1992f86a033a310eb0f012f1e4c6bd406caa608146df951e85298ff1
            env:
              NZBGET__PORT: &port 6789
              TZ: America/Los_Angeles
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 200Mi

    # --- Default pod-level options ----------------------------------------
    defaultPodOptions:
#      annotations:
#        k8s.v1.cni.cncf.io/networks: |-
#          [{
#            "name": "vpn",
#            "namespace": "kube-system",
#            "ips": ["fd00:90::11/64"],
#            "mac": "a6:3e:4f:09:e4:9c"
#          }]
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    # --- Service definition ------------------------------------------------
    service:
      app:
        ports:
          http:
            port: *port

    # --- Gateway API route -------------------------------------------------
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.sulibot.com"
        parentRefs:
          - name: gateway-external
            namespace: network

    # --- Persistent storage definitions -----------------------------------
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: csi-cephfs-config-sc
        accessMode: ReadWriteMany
        size: 100Mi
        globalMounts:
          - path: /config
      downloads:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: cephfs-content-pvc
        globalMounts:
          - path: /downloads
            subPath: Downloads/nzbget
