# General application settings
name: filebrowser                  # Application name (used for naming resources and host subdomain)
namespace: media                # Namespace for the application, PVCs, and services

# Docker container settings
image:
  repository: filebrowser/filebrowser
  tag: s6                   # Optional: Specify a tag for the image
  digest: ""                    # Optional: Specify a digest for the image (e.g., sha256:...)

# Timezone
timezone: "America/Los_Angeles"  # Default timezone for the application

# Environment variables
env:
# Uncomment and customize environment variables as needed
  - name: PUID
    value: "911"
  - name: PGID
    value: "911"

# Replica settings
replicaCount: 1

# Port configuration
ports:
  servicePort: 80               # Port exposed by the service
  targetPort: 8080              # Port used by the container

# Network configuration
gateway:
  name: gateway-internal        # Defaults to "gateway-internal"
  namespace: network            # Namespace for the Gateway and HTTPRoute
  domain: sulibot.com           # Default domain for hostnames

# Labels and Annotations
labels:
  global: {}                    # Global labels for all resources
  service: {}                   # Labels specific to the service
  deployment: {}                # Labels specific to the deployment
  pod: {}                       # Labels specific to the pod

annotations:
  global: {}                    # Global annotations for all resources
  service: {}                   # Annotations specific to the service
  deployment: {}                # Annotations specific to the deployment
  pod: {}                       # Annotations specific to the pod

# Resource requests and limits
resources:
  enabled: false                # Resource limits and requests are disabled by default
  requests:
    memory: "256Mi"             # Minimum memory requested
    cpu: "250m"                 # Minimum CPU requested
  limits:
    memory: "512Mi"             # Maximum memory allowed
    cpu: "500m"                 # Maximum CPU allowed

# Security context configuration
securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: OnRootMismatch                 # Enable or disable security context
  readOnlyRootFilesystem: false  # Restrict container filesystem to read-only
  allowPrivilegeEscalation: false # Restrict privilege escalation

# Config PVC configuration
config:
  enabled: true                 # PVC is enabled by default
  mountPath: /config            # Default mount path for config PVC
  storageSize: "100Mi"

# Shared PVC configuration
data:
  enabled: true                 # Shared PVC is enabled by default
  mountPath: /srv             # Mount path for shared PVC

# Init container configuration
initContainer:
  enabled: false                # Enable or disable the init container
  name: setup-container         # Name of the init container
  image: busybox                # Docker image to use
  command:                      # Command to run in the init container
    - /bin/sh
    - -c
  args:                         # Arguments for the command
    - "echo Setting up environment"
  env:                          # Environment variables for the init container
    - name: SAMPLE_ENV
      value: "init-container-value"
  volumeMounts:                 # Volume mounts for the init container
    - name: config
      mountPath: /config
    - name: data
      mountPath: /data


# Tolerations and Affinity
tolerations: []                   # Define tolerations to schedule pods on tainted nodes
# Example:
# - key: "key1"
#   operator: "Equal"
#   value: "value1"
#   effect: "NoSchedule"

affinity: {}                      # Define node and pod affinity rules
# Example:
# nodeAffinity:
#   requiredDuringSchedulingIgnoredDuringExecution:
#     nodeSelectorTerms:
#       - matchExpressions:
#           - key: "key1"
#             operator: "In"
#             values:
#               - "value1"
# podAffinity:
#   requiredDuringSchedulingIgnoredDuringExecution:
#     - labelSelector:
#         matchLabels:
#           app: "example-app"
#       topologyKey: "kubernetes.io/hostname"
